-----------------------     BASIC REDUX   ------------------------

1. redux manages the state which means the data. it shares the data between components.

2. Redux creates a store object  , store has the logic to handle the states

3. dispacher dispatch the data if any changes occur , reducer changes that data updation and store it in the store. we can keep track of the data changes in redux. Reducer has the state logic and upadte the  state

4. IMMUTABILITY --> it cannot be changet. it makes the copy of the object or array

------------------------- FUNCTIONAL PROGRAMMING -------------------

1. FUNCTIONAL PROGRAMMING means divide the complex problem into smaller functions. we can easily debuggable.

2. function as variable ,  passed as argument ,we can return function.

3. FUNCTIONAL PROGRAMMING library Loadash using this we can implement FP.

4. Compose , pipe these are pre written function 

  Compose --> we pass list of function to perform tasks
  Pipe --> we pass the function left to right means  step by step function calls

------------------------- CURRYING ----------------------

1. Currying is method to create function with param and function with param do operation with the 
  returned function. getting the single param and nesting the function .
 
a = a => b => a + b --> a(10)(12) --> Currying technique

2. pure function --> function that we creates there is no dependant on any other data.

----------------------------- IMMUTABILITY -----------------

1. IMMUTABILITY means cannot change the properties of objects. take the copies of the original object

and change the updated versio of the properties

------------------------- BASIC Strucure of REDUX ----------------

1.configureStore Creates the store in redux in configureStore function Reducer object  is there.

2. Provider provides the store for our app.

configureStore({
  reducer : {
    
  }
})

3. Provider Provides the store for the entire app.wrap app component in Provider.

4. In store all the states are here we are seperating those states as slice for efficient use.
